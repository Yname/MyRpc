<?xml version="1.0" encoding="utf-8" ?>
<configuration>
<!--    logback-spring.xml，为什么要取这个名字呢，
Spring Boot官方推荐优先使用带有-spring的文件名作为你的日志配置
（如使用logback-spring.xml，而不是logback.xml），如果我们想自定义名字，也可以，
可以在 application.yml中通过  logging.config=classpath:/xxx.xml等方式配置。-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d -- %msg%n</pattern>
        </layout>
    </appender>
<!--    根据每天的日期生成一个log-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--要拦截的日志级别-->
            <level>ERROR</level>
            <!--如果匹配，则禁止-->
            <onMatch>DENY</onMatch>
            <!--如果不匹配，则允许记录-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>%d -- %msg%n</pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>info-%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--添加 范围 过滤-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>%d -- %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>error-%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>


    <root level="info">
<!--        打印到控制台  测试时候使用  -->
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>
</configuration>